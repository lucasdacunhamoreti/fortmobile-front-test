version: '3.1'

services:
  db:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
    ports:
    - '3306:3306'
  node:
  image: node:16.14
  # Nome do container para facilitar execução
  container_name: users-backend
  # Mesmo que `docker run -t`
  tty: true
  # Mesmo que `docker run -i`
  stdin_open: true
  # Substitui o comando padrão da imagem do node
  command: bash -c "npm install && npx sequelize-cli db:migrate && npm run dev"

  # Restarta a imagem caso algo a faça parar
  restart: always
  # Diretório padrão de execução
  working_dir: /home/node/app
  # Lista de volumes (diretórios) mapeados de fora para dentro do container
  volumes:
    # Monta o diretório atual, com todos os dados do projeto, 
    # dentro do diretório /app
    - ./backend:/home/node/app
  # Lista de serviços do qual este serviço depende
  depends_on:
    # Precisa do banco funcionando antes de subir o node
    - db
  # Lista de portas mapeadas de dentro para fora do container
  # na notação porta_de_fora:porta_de_dentro
  ports:
    # Expõe a porta padrão da aplicação: altere aqui caso use outra porta
    - 3001:3001
  # Configura as variáveis de ambiente dentro do container
  environment:
    MYSQL_USER: root
    MYSQL_PASSWORD: password
    MYSQL_HOST: db # Nome do service logo abaixo
    PORT: '3001'

  frontend:
    container_name: users_frontend
    image: node:16.14
    restart: always
    command: bash -c "npm install && ng serve"
    tty: true
    # Mesmo que `docker run -i`
    stdin_open: true
    ports:
      # Garanta que não haverá conflitos de porta com um banco que esteja
      # rodando localmente
      - 4200:4200
    working_dir: /home/crud-angular/app
    # Lista de volumes (diretórios) mapeados de fora para dentro do container
    volumes:
      # Monta o diretório atual, com todos os dados do projeto, 
      # dentro do diretório /app
      - ./crud-angular:/home/crud-angular/app
    # Lista de serviços do qual este serviço depende
    depends_on:
      # Precisa do banco funcionando antes de subir o node
      - node

# Lista de redes que os containeres irão utilizar
networks:
  # Rede padrão, criada automaticamente
  default:
    # Dá um nome específico à rede padrão
    name: questions_net